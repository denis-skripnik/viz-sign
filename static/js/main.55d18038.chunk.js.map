{"version":3,"sources":["service/opschemas.js","service/operation.js","service/sign.js","components/SignErrorsView.jsx","components/SignFormComponents.jsx","components/SignForm.jsx","components/OperationDetails.jsx","components/TransactionView.jsx","components/ErrorsView.jsx","components/App.js","serviceWorker.js","index.js"],"names":["opschemas","$id","type","minItems","items","$ref","pattern","minimum","maximum","maxLength","enum","ROLES_PRIORITY","owner","active","posting","memo","sort_roles","roles","sort","a","b","validate","Ajv","schemas","GolosSchema","verbose","getSchema","Transaction","json","Object","classCallCheck","this","errors","raw_transaction","toConsumableArray","ops","readOps","createClass","key","value","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","opTuple","push","Operation","err","return","get","length","temp","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","op","role","name","body","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","operations","operation","golos","require","SIGN_TYPE","PASSWORD","WIF","_callee","transaction","sign_type","account","password","required_wif","wif","tx","prepared_tx","signed_tx","ret","regenerator_default","wrap","_context","prev","getWif","extensions","defineProperty","broadcast","_prepareTransaction","sent","auth","signTransaction","api","broadcastTransactionSynchronousAsync","abrupt","stop","getPrivateKeys","_callee2","_ref","_ref2","_context2","getAccountsAsync","slicedToArray","signandsend","ERROR_DESC","Expected version","3020100","2020000","3080000","2030000","SignErrorsView","_Component","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","error","props","console","log","message","react_default","createElement","arr","split","className","pop","desc","msg","match","getDesc","result","block_num","id","redirect","isError","alert","extractErrorMessage","extractUsefulInfos","Component","WifInput","wif_class","wif_error","onChange","ev","target","aria-describedby","required","SignButton","onClick","onSign","FormWif","form_class","htmlFor","SignFormComponents_WifInput","assign","translate_role","SignFormComponents_SignButton","FormAccountAndPasswort","account_error","account_class","placeholder","FormSelector","SignFormComponents_FormWif","SignFormComponents_FormAccountAndPasswort","SignForm","_this","call","state","user","sending","_this2","then","onSuccess","catch","setState","_this3","setTimeout","window","location","_this4","_x5","_checkAccount","checkAccount","send","_this$setState","_this5","_this$props","nowif","TabButton","label","react_responsive_default","minWidth","maxWidth","components_SignErrorsView","SignFormComponents_FormSelector","is_pass","icon","fa","title","OP_TRANSLATIONS","vote","comment","transfer","transfer_to_vesting","withdraw_vesting","limit_order_create","limit_order_cancel","feed_publish","convert","account_create","account_update","witness_update","account_witness_vote","account_witness_proxy","pow","custom","report_over_production","delete_comment","custom_json","comment_options","set_withdraw_vesting_route","limit_order_create2","challenge_authority","prove_authority","request_account_recovery","recover_account","change_recovery_account","escrow_transfer","escrow_dispute","escrow_release","pow2","escrow_approve","transfer_to_savings","transfer_from_savings","cancel_transfer_from_savings","custom_binary","decline_voting_rights","reset_account","set_reset_account","delegate_vesting_shares","account_create_with_delegation","account_metadata","proposal_create","proposal_update","proposal_delete","chain_properties_update","break_free_referral","delegate_vesting_shares_with_interest","reject_vesting_shares_delegation","TransactionView","status","components_SignForm","map","i","getOpName","from","to","amount","substring","JSON","stringify","getOpDetails","ErrorsView","e","keyword","dataPath","schemaPath","ErrorMessage","App","params","queryString","parse","search","subtitle","keys","includes","sanatizer","sanitizeUrl","tr","content","components_TransactionView","App_ErrorMessage","components_ErrorsView","rel","href","Boolean","hostname","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.55d18038.chunk.js","sourcesContent":["/*\n* Схемы операций для валидирования.\n*/\n\n/**\n * Взято из исходников голоса\n */\nconst known_operations = [\n    \"vote\",\n    \"comment\",\n\n    \"transfer\",\n    \"transfer_to_vesting\",\n    \"withdraw_vesting\",\n\n    \"limit_order_create\",\n    \"limit_order_cancel\",\n\n    \"feed_publish\",\n    \"convert\",\n\n    \"account_create\",\n    \"account_update\",\n\n    \"witness_update\",\n    \"account_witness_vote\",\n    \"account_witness_proxy\",\n\n    \"pow\",\n\n    \"custom\",\n\n    \"report_over_production\",\n\n    \"delete_comment\",\n    \"custom_json\",\n    \"comment_options\",\n    \"set_withdraw_vesting_route\",\n    \"limit_order_create2\",\n    \"challenge_authority\",\n    \"prove_authority\",\n    \"request_account_recovery\",\n    \"recover_account\",\n    \"change_recovery_account\",\n    \"escrow_transfer\",\n    \"escrow_dispute\",\n    \"escrow_release\",\n    \"pow2\",\n    \"escrow_approve\",\n    \"transfer_to_savings\",\n    \"transfer_from_savings\",\n    \"cancel_transfer_from_savings\",\n    \"custom_binary\",\n    \"decline_voting_rights\",\n    \"reset_account\",\n    \"set_reset_account\",\n    \"delegate_vesting_shares\",\n    \"account_create_with_delegation\",\n    \"account_metadata\",\n    \"proposal_create\",\n    \"proposal_update\",\n    \"proposal_delete\",\n    \"chain_properties_update\",\n    \"break_free_referral\",\n    \"delegate_vesting_shares_with_interest\",\n    \"reject_vesting_shares_delegation\",    \n]\n\n\n/**\n * Схема параметра transaction. Ожидается массив (Array) операций\n */\nconst transaction = {\n    \"$id\" : \"/golos/transaction\",\n    type: \"array\",\n    minItems: 1,\n    items: [ \n        {\"$ref\": \"/golos/operation\"}\n    ]\n}\n\n/**\n * Операция \n */\nconst operation = {\n    \"$id\" : \"/golos/operation\",\n    type: \"array\",\n    minItems: 2, maxLength: 2,\n    items: [\n        {type: \"string\", enum: known_operations},\n        {type: \"object\"}\n    ]\n}\n\n\nconst account = {\n    \"$id\" : \"/golos/account\",\n    type: \"string\",\n    pattern: \"^[a-z][-\\\\.a-z\\\\d]{2,15}[a-z\\\\d]$\"\n}\n\nconst permlink = {\n    \"$id\" : \"/golos/permlink\",\n    type: \"string\",\n    pattern: \"^.{1,256}$\"\n}\n\nconst public_key = {\n    \"$id\" : \"/golos/public_key\",\n    type: \"string\",\n    pattern: \"^GLS[0-9a-zA-Z]{50}$\"\n}\n\nconst percent = {\n    \"$id\" : \"/golos/percent\",\n    type: \"integer\",\n    minimum: 0, \n    maximum: 10000\n}\n\nconst asset = {\n    \"$id\" : \"/golos/asset\",\n    type: \"string\",\n    pattern: \"^[0-9]+\\\\.[0-9]{3} (GOLOS|GBG)$\"\n}\n\nexport default [\n    //базовые типы\n    transaction,\n    account,\n    asset,\n    permlink,\n    public_key,\n    percent, \n\n    operation,\n]\n\n","/*\n* Вспомогательные классы для валидирования входных данных (операций) и для отображения.\n*/\nimport Ajv from \"ajv\";\nimport GolosSchema from \"./opschemas\";\n\nimport operations from \"golos-js/lib/broadcast/operations\";\n\nconst ROLES_PRIORITY = {\n    \"owner\" : 0,\n    \"active\" : 1,\n    \"posting\" : 2,\n    \"memo\" : 3\n}\n\nfunction sort_roles(roles) {\n    return roles.sort((a,b) => {\n        return ROLES_PRIORITY[b] - ROLES_PRIORITY[a];\n    })\n}\n\nconst ajv = new Ajv({schemas: GolosSchema, verbose: true});\nconst validate = ajv.getSchema(\"/golos/transaction\");\n\nexport class Transaction {\n    constructor(json) {\n        if(!validate(json)) {\n            \n            throw validate.errors;\n        }\n        this.raw_transaction = [...json];\n        this.ops = [];\n        this.readOps();\n    }\n\n    /**\n     * Вернуть минимальную, требуемую роль\n     */\n    get required_wif() {\n        if(this.ops.length == 0) {\n            return null;\n        }\n        const temp = [];\n        for(let op of this.ops) {\n            temp.push(op.role);\n        }\n        return sort_roles(temp)[0];\n    }\n\n    readOps() {\n        for(let opTuple of this.raw_transaction) {\n            this.ops.push(new Operation(opTuple[0], opTuple[1]));\n        }\n    }\n}\n\nclass Operation {\n    constructor(name, body) {\n        this.name = name;\n        this.body = body;\n\n        for(let op of operations) {\n            if(op.operation === this.name) {\n                this.roles = sort_roles(op.roles);\n            }\n        }\n    }\n\n    get role() {\n        //Вернуть самый слабый ключ \n        return this.roles[0];\n    }\n    \n}\n\n//////////////////////////\n\nfunction test_roles() {\n    console.log(\"TEST\", sort_roles([\"active\", \"owner\", \"posting\"]))\n    console.log(\"TEST\", sort_roles([\"posting\", \"active\", \"owner\"]))\n    console.log(\"TEST\", sort_roles([\"active\", \"owner\"]))\n}\n\n//test_roles();","const golos = require(\"golos-js\");\n\nexport const SIGN_TYPE = {\n    PASSWORD: \"password\",\n    WIF: \"wif\",\n}\n\n/**\n * Подпись и отправка транзакции. Имплементация взята из golos-js.broadcast.send и адаптирована под свои нужды.\n * @param {operation/Transaction} transaction \n * @param {SIGN_TYPE} sign_type \n * @param {string} account \n * @param {string} password \n * @returns \"Возвращает данные о созданной транзакции\"\n */\nasync function signandsend(transaction, sign_type, account, password) {\n    const {raw_transaction, required_wif} = transaction;\n\n    //Получаем ключ из аккаунта и пароля, если передан пароль\n    const wif = getWif(sign_type, account, password, required_wif);\n\n    //Формируем объект транзакции и объект с ключем\n    const tx = {extensions: [], operations: raw_transaction}; \n    const key = {[required_wif]: wif};\n\n    //Подготавливаем транзакцию используя метод библиотеки. Получаем блок референсный блок, выставляем expiration.\n    const prepared_tx = await golos.broadcast._prepareTransaction(tx);\n    \n    //Подписываем транзакцию ключем\n    const signed_tx = golos.auth.signTransaction(prepared_tx, key);\n\n    //Отправляем транзакцию ноде и в ответ получаем ID транзакции и блок.\n    let ret = await golos.api.broadcastTransactionSynchronousAsync(signed_tx);\n    return ret;\n}\n\n/**\n * Генерирует из имени аккаунта и мастер-пароля ключ нужного уровня доступа. \n * Или возвращает пароль как есть, в надежде, что это приватный ключ.\n * @param {SIGN_TYPE} sign_type - Тип подписи. Аккаунт + пароль или приыватный ключ.\n * @param {string} account - Аккаунт голос\n * @param {string} password - Пароль или приватный ключ\n * @param {string} required_wif - Требуемый уровень доступа - owner, active, posting или memo\n * @returns \"Возвращает необходимый для подписи ключ.\"\n */\nfunction getWif(sign_type, account, password, required_wif) {\n    switch(sign_type) {\n        case SIGN_TYPE.PASSWORD:\n            const wifs = golos.auth.getPrivateKeys(account, password, [required_wif]);\n            return wifs[required_wif];\n        default:\n            return password;\n    }\n}\n\n/**\n * Проверяет, существует ли аккаунт с таким именем. Для этого пробует загрузить данные аккаунта.\n * @param {string} account \n * @returns Возвращет текст с сообщением об ошибке.\n */\nexport async function checkAccount(account) {\n    if(!account) {\n        return \"Аккаунт обязателен для аутентификации паролем\";\n    }\n    const [acc] = await golos.api.getAccountsAsync([account]);\n    if(!acc) {\n        return \"Аккаунт с таким именем не существует!\";\n    }\n    return null;\n}\n\nexport default signandsend;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nconst ERROR_DESC = {\n    \"Expected version\": \"Вероятно введенный ключ не является приватным ключем, неверный формат, пропущенный знак\",\n    \"3020100\": \"Введенный ключ либо не достаточного уровня либо отсутствует в ауторити пользователя\",\n    \"2020000\": \"Недостаточно средств на счету пользователя\",\n    \"3080000\": \"Повторная транзакция с такими же параметрами в блоке\",\n    \"2030000\": \"Нельзя в транзакции комбинировать операции требующие ключи разного уровня\"\n}\n\nfunction getDesc(msg) {\n    for(let pattern in ERROR_DESC) {\n        if(msg.match(pattern)) {\n            return ERROR_DESC[pattern];\n        }\n    }\n    return null;\n}\n\nexport class SignErrorsView extends Component {\n    static propTypes = {\n        error: PropTypes.object,\n        result: PropTypes.object,\n        redirect: PropTypes.string,\n    }\n\n    extractErrorMessage() {\n        const error = this.props.error;\n        console.log(\"error\", error);\n        let message = null;\n        let ret = [<h4 key=\"head\">Ошибка отправки транзакции</h4>];\n        if(error.message) {\n            let arr = error.message.split(\"\\n\");\n            message = arr[0];\n            ret.push(<p key=\"error-text\" className=\"mb-0\">Сообщение об ошибке: {arr[0]}</p>);\n            if(arr.length > 1) {\n                ret.pop();\n                ret.push(<p key=\"error-text\" className=\"mb-0\">Сообщение об ошибке: {arr[1]}</p>);\n            }\n        }\n\n        if(message) {\n            const desc = getDesc(message);\n            if(desc) {\n                ret.push(<p key=\"error-desc\" className=\"mb-0\">Подсказка: {desc}</p>);\n            }\n        }\n\n        return ret;\n    }\n\n    extractUsefulInfos() {\n        console.log(\"ret\", this.props.result);\n        return <div>\n            <h4>Отправленно!</h4>\n                <p className=\"mb-0\">Номер блока: {this.props.result.block_num}</p>\n                <p className=\"mb-0\">ID транзакции: {this.props.result.id}</p>\n                {this.props.redirect && <p className=\"mt-2\">Вы будете автоматически перенаправлены на адрес <strong>{this.props.redirect}</strong>...</p>\n                }\n            </div>;\n    }\n\n    render() {\n        const isError = !!this.props.error;\n        const alert = isError? \"danger\" : \"success\"\n        const message = isError?this.extractErrorMessage():this.extractUsefulInfos();\n        return (\n            <div className={\"mt-5 mb-5 alert alert-\"+ alert} role=\"alert\">\n                {message}\n            </div>\n        )\n    }\n}\n\nexport default SignErrorsView\n","import React from 'react'\nimport {SIGN_TYPE} from \"../service/sign\";\n\nfunction translate_role(role) {\n    console.log(\"translate role\", role);\n    switch(role) {\n        case \"owner\": return \"приватный ключ владельца\"; \n        case \"active\": return \"приватный, активный ключ\"; \n        case \"posting\": return \"приватный, постинг ключ\"; \n        case \"memo\": return \"приватный, ключ для заметок\"; \n        default:\n            return null;\n    }\n}\n\nexport const WifInput = (props) => {\n    const wif_class = (props.wif_error?\" is-invalid\":\"\");\n    return (\n        <input id={props.id} name={props.id}\n            value={props.wif}\n            onChange={(ev) => props.onChange(\"wif\", ev.target.value)}\n            type=\"password\"\n            className={\"form-control\" + wif_class}\n            aria-describedby=\"wif-help\"\n            required />\n    );\n}\n\n\nexport const TabButton = (props) => {\n    const { active } = props;\n    const active_class = active ? \" active \" : \"\";\n    return (\n        <li className=\"nav-item\">\n            <button className={\"btn nav-link \" + active_class} onClick={props.selectForm}>{props.label}</button>\n        </li>\n    )\n}\n\nexport const SignButton = (props) => {\n    return (\n        <div className=\"form-group input-group-sm\">\n            <button type=\"button\" id=\"sign-botton\" className=\"btn btn-primary\" onClick={props.onSign}>Отправить</button>\n        </div>\n    )\n}\n\nexport const FormWif = (props) => {\n    const {transaction, form_class, wif_error} = props;\n    return (\n        <form id=\"sign-form\" className={form_class}>\n            <div className=\"form-group input-group-sm\">\n                <label htmlFor=\"wif\">Приватный ключ</label>\n\n                <WifInput id=\"wif\" {...props} />\n\n                <small id=\"wif-help\" className=\"form-text text-muted\">Для подписи транзакции требуется как минимум <strong>{translate_role(transaction.required_wif)}</strong></small>\n                <div className=\"invalid-feedback\">{wif_error}</div>\n            </div>\n            <SignButton  {...props} />\n        </form>\n    )\n}\n\nexport const FormAccountAndPasswort = (props) => {\n    const {form_class, onChange, account, account_error, wif_error} = props;\n    const account_class = (account_error?\" is-invalid\":\"\");\n    return (\n        <form id=\"sign-form\" className={form_class}>\n            <div className=\"form-group input-group-sm\">\n                <label htmlFor=\"account\">Имя пользователя</label>\n\n                <input\n                    id=\"account\"\n                    name=\"account\"\n                    value={account}\n                    onChange={(ev) => onChange(\"account\", ev.target.value)}\n                    type=\"text\"\n                    className={\"form-control\" + account_class}\n                    placeholder=\"Аккаунт в блокчейне golos\"\n                    required />\n\n                <div className=\"invalid-feedback\">{account_error}</div>\n            </div>\n            <div className=\"form-group input-group-sm\">\n                <label htmlFor=\"wif\">Пароль</label>\n\n                <WifInput id=\"password\" {...props} />\n\n                <div className=\"invalid-feedback\">{wif_error}</div>\n            </div>\n\n            <SignButton  {...props}/>\n        </form>\n    )\n}\n\nexport const FormSelector = (props) => {\n\n    switch (props.sign_type) {\n        case SIGN_TYPE.WIF:\n            return <FormWif {...props} />;\n        default:\n            return <FormAccountAndPasswort {...props} />;\n    }\n}\n\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Transaction } from \"../service/operation\";\nimport signandsend, {SIGN_TYPE, checkAccount} from \"../service/sign\";\nimport SignErrorsView from './SignErrorsView';\nimport MediaQuery from 'react-responsive';\n\nimport {FormSelector} from \"./SignFormComponents\";\nimport {FaKey, FaUser} from \"react-icons/fa\";\n\nexport class SignForm extends Component {\n\n    static propTypes = {\n        transaction: PropTypes.instanceOf(Transaction).isRequired\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            wif: \"\",\n            account: props.user || \"\",\n            error: null,\n            result: null,\n            sign_type: SIGN_TYPE.PASSWORD,\n            account_error : null,\n            sending: false,\n            redirect: null,\n        }\n    }\n\n    /**\n     * Собственно отправка транзакции\n     */\n    send() {\n        signandsend(this.props.transaction, this.state.sign_type, this.state.account, this.state.wif)\n            .then(result => this.onSuccess(result))\n            .catch(error => this.setState({ result: null, error, account_error: null, sending: false }));\n        this.setState({sending:true, error: null, result: null});\n    }\n\n    onSuccess(result) {\n        this.setState({ result, error: null, account_error: null, sending: false })\n        this.redirect();\n    }\n\n    redirect() {\n        if(!this.props.redirect) {\n            return;\n        }\n\n        setTimeout(() => {window.location = this.props.redirect}, 5 * 1000);\n    }\n\n    onSign() {\n        //Валидация форм.\n        switch(this.state.sign_type) {\n            case SIGN_TYPE.PASSWORD:\n                    let wif_error = null;\n                    if(!this.state.wif) {\n                        wif_error = \"Пароль обязателен\";\n                    }\n\n                    checkAccount(this.state.account).then(account_error => {\n                    if(account_error || wif_error) {\n                        this.setState({account_error, wif_error});\n                    } else {\n                        //При отсутствии ошибок оправить транзакцию\n                        this.send();\n                    }\n                }).catch(error => {\n                    console.error(\"Ошибка проверки аккаунта\");\n                    this.setState({account_error: \"Не получилось проверить аккаунт\"});\n                })\n\n                break;\n            default:\n                if(!this.state.wif) {\n                    this.setState({wif_error: \"Приватный ключ обязателен\"})\n                    return;\n                }\n                //При отсутствии ошибок оправить транзакцию\n                this.send();\n        }\n    }\n\n    onChange(key, value) {\n        console.log(\"onChange\", key, value)\n        this.setState({[key]:value, wif_error:null, account_error:null});\n    }\n\n    render() {\n        const {nowif, redirect} = this.props;\n        let form_class = \"needs-validation\";\n\n        const TabButton = (props) => {\n            const { sign_type } = props;\n            const active = this.state.sign_type === sign_type ? \" active \" : \"\";\n            return (<li className=\"nav-item\"><button  type=\"button\" className={\"btn btn-block nav-link \" + active} onClick={() => this.setState({ sign_type })}>{props.label}</button></li>)\n        }\n\n        const BottomToggler = (props) => {\n            if(nowif) {\n                const is_pass = this.state.sign_type === SIGN_TYPE.PASSWORD;\n                const icon = is_pass?<FaKey />:<FaUser />;\n                const sign_type =  is_pass?SIGN_TYPE.WIF:SIGN_TYPE.PASSWORD;\n                const title = is_pass?\"Подпись ключом\":\"Подпись паролем\";\n                return <button type=\"button\" title={title} \n                    className=\"btn-outline-primary float-right btn btn-sm btn-primary\" \n                    onClick={() => this.setState({ sign_type })}>{icon}</button>;\n            }\n            return null;\n        }\n\n        return (\n            <div className=\"clearfix border p-2 m-2\">\n                {!nowif && <div className=\" mb-3\">\n                \n                <MediaQuery minWidth={425}>\n                    <ul className=\"nav nav-tabs\">\n                        <TabButton label=\"Подпись паролем\" sign_type={SIGN_TYPE.PASSWORD} />\n                        <TabButton label=\"Подпись ключом\" sign_type={SIGN_TYPE.WIF} />\n                    </ul>\n                </MediaQuery>\n                <MediaQuery maxWidth={420}>\n                    <ul className=\"nav nav-pills nav-justified\">\n                        <TabButton label=\"Подпись паролем\" sign_type={SIGN_TYPE.PASSWORD} />\n                        <TabButton label=\"Подпись ключем\" sign_type={SIGN_TYPE.WIF} />\n                    </ul>\n                </MediaQuery>\n                \n                </div>}\n                \n                {(this.state.error || this.state.result) && <SignErrorsView error={this.state.error} result={this.state.result} redirect={redirect} />}\n                {this.state.sending && <div className={\"mt-5 mb-5 alert alert-warning\"} role=\"alert\">\n                    <h4>Отправка...</h4>\n                    </div>\n                }\n\n                <FormSelector \n                    onChange={(key,value) => this.onChange(key, value)}\n                    onSign={() => this.onSign()}\n                    form_class={form_class}\n                    {...this.state}\n                    {...this.props}\n                />\n                <BottomToggler />\n            </div>\n        )\n    }\n}\n\nexport default SignForm\n","import React from 'react'\n\nexport function getOpDetails(op) {\n    switch(op.name) {\n        case \"transfer\":\n            return <div className=\"md-2 border-bottom\">\n                <strong>От</strong> {op.body.from}, <strong>Кому</strong> {op.body.to}, <strong>Сумма</strong> {op.body.amount}\n                <br /><strong>Заметка</strong> {(\"\"+op.body.memo || \"\").substring(0, 50)}\n            </div>;\n        default:\n            return <pre>{JSON.stringify(op.body, null, 2)}</pre>;\n    }\n}\n\nconst OP_TRANSLATIONS = {\n    vote: \"Апвоут\", \n    comment: \"Пост/Комментарий\", \n\n    transfer: \"Перевод\", \n    transfer_to_vesting: \"Перевод в СГ\", \n    withdraw_vesting: \"Понижение СГ\", \n\n    limit_order_create: \"Создать ордер\", \n    limit_order_cancel: \"Отменить ордер\", \n\n    feed_publish: \"Опубликовать фид\", \n    convert: \"Конвертировать GBG в GOLOS\", \n\n    account_create: \"Создать аккаунт\", \n    account_update: \"Обновить аккаунт\", \n\n    witness_update: \"Обновить делегата\", \n    account_witness_vote: \"Проголосовать за делегата\", \n    account_witness_proxy: \"Назначить доверенного\", \n\n    pow: \"Proof of Work\", \n\n    custom: \"custom\", \n\n    report_over_production: \"Настучать\", \n\n    delete_comment: \"Удалить пост или комментарий\", \n    custom_json: \"Кастомная операция\", \n    comment_options: \"Настроить пост/комментарий\", \n    set_withdraw_vesting_route: \"Установить путь понижения СГ\", \n    limit_order_create2: \"Создать ордер 2\", \n    challenge_authority: \"challenge_authority\", \n    prove_authority: \"prove_authority\", \n    request_account_recovery: \"request_account_recovery\", \n    recover_account: \"recover_account\", \n    change_recovery_account: \"change_recovery_account\", \n    escrow_transfer: \"escrow_transfer\", \n    escrow_dispute: \"escrow_dispute\", \n    escrow_release: \"escrow_release\", \n    pow2: \"Proof of Work 2\", \n    escrow_approve: \"escrow_approve\", \n    transfer_to_savings: \"Перевести в сейф\", \n    transfer_from_savings: \"Вывести из сейфа\", \n    cancel_transfer_from_savings: \"Отменить вывод из сейфа\", \n    custom_binary: \"Кастомная операция (бин.)\", \n    decline_voting_rights: \"Отказаться от голосования (необратимая операция!)\", \n    reset_account: \"reset_account\", \n    set_reset_account: \"set_reset_account\", \n    delegate_vesting_shares: \"delegate_vesting_shares\", \n    account_create_with_delegation: \"account_create_with_delegation\", \n    account_metadata: \"Обновить профиль\", \n    proposal_create: \"proposal_create\", \n    proposal_update: \"proposal_update\", \n    proposal_delete: \"proposal_delete\", \n    chain_properties_update: \"Обновить параметры сети\", \n    break_free_referral: \"Откупиться\", \n    delegate_vesting_shares_with_interest: \"Делегирование с отчислением процента\", \n    reject_vesting_shares_delegation: \"Отказаться от делегирования\",   \n}\n\nexport function getOpName(op) {\n    let name = OP_TRANSLATIONS[op.name];\n    if(!name) name = op.name;\n\n    return <span className=\"label label-default\">{name}</span>\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Transaction } from \"../service/operation\";\nimport SignForm from './SignForm';\nimport {getOpDetails, getOpName} from \"./OperationDetails\";\n\nexport class TransactionView extends Component {\n    static propTypes = {\n        transaction: PropTypes.instanceOf(Transaction).isRequired\n    }\n\n    constructor(props) {\n        super(props);\n        this.status = {\n\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"row \">\n                    <div className=\"col-sm-12\">\n                        <SignForm {...this.props} />\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                    <div className=\" border m-2 p-2\">\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            <h4>Содержимое</h4>\n                        </div>\n\n\n                        <div className=\"container\">\n                                {this.props.transaction.ops.map((op, i) => (\n                                <div className=\"row\" key={i}>\n                                    <div className=\"col-sm-3\"><div className=\"font-weight-bold\">Операция</div>{getOpName(op)}<div><small>{op.name}</small></div></div>\n                                    <div className=\"col-sm-9\"><div className=\"font-weight-bold\">Детальная информация</div>{getOpDetails(op)}</div>\n                                </div>\n                                ))\n                                }\n                        </div>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TransactionView\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class ErrorsView extends Component {\n    static propTypes = {\n        errors: PropTypes.arrayOf(Object).isRequired\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"alert alert-danger\" role=\"alert\">\n                <h4>Полученная на подпись транзакция содержит ошибки</h4>\n                </div>\n                <table className=\"table table-sm\">\n                    <thead>\n                        <tr>\n                            <th>Тип ошибки</th>\n                            <th>Место в данных</th>\n                            <th>Схема</th>\n                            <th>Сообщение</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {this.props.errors.map((e, i) => <tr key={i}>\n                        <td>{e.keyword}</td>\n                        <td>{e.dataPath}</td>\n                        <td>{e.schemaPath}</td>\n                        <td>{e.message}</td>\n                    </tr>)}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default ErrorsView\n","import queryString from \"query-string\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nimport TransactionView from \"./TransactionView\";\n\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport { Transaction } from \"../service/operation\";\nimport ErrorsView from \"./ErrorsView\";\n\nimport sanatizer from \"@braintree/sanitize-url\";\n\nconst ErrorMessage = (props) => {\n    return (\n        <div className=\"mt-5 mb-5 alert alert-danger\" role=\"alert\">\n            <h4>{props.error}</h4>\n        </div>\n    );\n}\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            transaction: null,\n            errors: null,\n            error: null\n        }\n    }\n\n    componentDidMount() {\n        const params = queryString.parse(window.location.search);\n        const title = (params[\"title\"] || \"Писарь\");\n        const subtitle = (params[\"subtitle\"]);\n        const nowif = Object.keys(params).includes(\"nowif\");\n        const user = params[\"user\"];\n        let redirect = sanatizer.sanitizeUrl(params[\"redirect\"] || \"\");\n\n        if(redirect === \"about:blank\") {\n            redirect = null;\n        }\n\n        let tr = params[\"tr\"];\n        if (!tr) {\n            console.log(\"Не найден URL параметр tr\");\n            this.setState({ title, subtitle, error: \"Вызов без параметров\" });\n            return;\n        }\n\n        try {\n            //Пробуем распарсить json\n            let json = null;\n            try {\n                json = JSON.parse(tr);\n            } catch (error) {\n                console.log(\"not valid json\", tr);\n                this.setState({ title, subtitle, error: \"Переданная транзакция не является валидным JSON\" });\n                return;\n            }\n            //Проверка транзакции на валидность\n            const transaction = new Transaction(json);\n            this.setState({ transaction, title, subtitle, user, nowif, redirect });\n        } catch (errors) {\n            //обнаружены ошибки\n            console.log(\"found errors\", errors)\n            this.setState({ errors });\n        }\n    }\n\n    render() {\n\n        let content = null;\n        if (this.state.transaction) {\n            content = <TransactionView redirect={this.state.redirect} nowif={this.state.nowif} user={this.state.user} transaction={this.state.transaction} />\n        } else if (this.state.error) {\n            content = <ErrorMessage error={this.state.error} />\n        } else if (this.state.errors) {\n            content = <ErrorsView errors={this.state.errors} />\n        }\n\n        return (\n            <div className=\"container App\">\n                {<div className=\"row\">\n                    <div className=\"col-sm-12\">\n                        <nav className=\"navbar navbar-light \" >\n                            <div>\n                                <h3>{this.state.title}</h3>\n                                {this.state.subtitle && <h5>{this.state.subtitle}</h5>}\n                                <br /><small>Подпись транзакции GOLOS\n                                <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://golos.io/@ropox/sign\">&nbsp;<span className=\"rounded-circle bg-info text-white font-weight-bold\">&nbsp;?&nbsp;</span></a></small>\n                            </div>\n                        </nav>\n                    </div>\n        </div>}\n                <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                        {content}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}